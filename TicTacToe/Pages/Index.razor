@page "/"
@using TicTacToe.Data;

<PageTitle>Index</PageTitle>
<div class="h-100 d-flex justify-content-center align-items-center flex-column">
    <div class="fs-1 fw-bold">TicTacToe</div>
    <div style="max-width: 800px; aspect-ratio: 1;" class="w-100">
        <Neumorphism class="h-100 w-100" ShapeType="ShapeType.SINK">
            <div class="d-flex flex-wrap w-100 h-100">
                @foreach (GridItem gridItem in _gridItemService.GetGridItems())
                {
                    <div style="width: calc(100%/3); aspect-ratio: 1;padding: .5rem;">
                        <Neumorphism class="h-100 w-100">
                            <button disabled="@(!string.IsNullOrEmpty(_gridItemService.GetResult()))" class="h-100 w-100 d-flex justify-content-center align-items-center" @onclick=@(() => _gridItemService.UpdateItem(gridItem))>
                                <span class="fs-1">@gridItem.DisplayContent</span>
                            </button>
                        </Neumorphism>
                    </div>
                }
            </div>
        </Neumorphism>
    </div>
    @if (!string.IsNullOrEmpty(_gridItemService.GetResult()))
    {
        <div style="max-width: 800px;width:100%;">
            <Neumorphism class="my-4" ShapeType="ShapeType.SINK">
                <div class="fw-bold">Winner: @_gridItemService.GetResult()</div>
            </Neumorphism>
            <Neumorphism class="my-4">
                <button class="fw-bold" @onclick=@(() => _gridItemService.Reset())>Reset</button>
            </Neumorphism>
        </div>
    }
</div>
@code {
    [CascadingParameter(Name = "gridItem")] protected GridItemService _gridItemService { get; set; } = null!;
}